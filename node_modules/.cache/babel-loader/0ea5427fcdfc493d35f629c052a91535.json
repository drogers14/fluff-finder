{"ast":null,"code":"var _jsxFileName = \"/Users/destinythejedi/School/courses/csci490/FluffFinder/fluff-finder/src/PetProfiles.js\";\nimport kitty from \"./petImages/kittysad.jpg\";\nimport killua from \"./petImages/killua.jpg\";\nimport appa from \"./petImages/appa.jpg\";\nimport luna from \"./petImages/luna.png\";\nimport sprinkles from \"./petImages/sprinkles.JPG\";\nimport React from \"react\";\nimport PetProfile from \"./PetProfile\";\nimport { Search } from \"grommet-icons\";\nimport { connect } from \"react-redux\";\nimport { getPets, scrapeWebByLocation } from \"./js/actions/index\";\nimport { Button, Heading, Image, Box, Grid, FormField, TextInput } from \"grommet\";\n/*function testing(city){\n  console.log('here')\nfetch(`http://localhost:5000/find_pets_py/${city}`)\n  .then((response) => response.json())\n  .then((json) => {\n    console.log(json);\n  });\n}*/\n\nclass PetProfiles extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      pets: this.props.petData\n    };\n  }\n\n  componentDidMount() {\n    this.props.getPets();\n    console.log(this.props.petData);\n    this.setState({\n      pets: this.props.petData\n    });\n    console.log(this.state.pets);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n      align: \"center\",\n      justify: \"center\",\n      gap: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      align: \"center\",\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"Search for a fluff\"), /*#__PURE__*/React.createElement(Box, {\n      direction: \"row\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      type: \"search\",\n      placeholder: \"search by city\",\n      value: this.state.value,\n      onChange: event => {\n        this.setState({\n          value: event.target.value\n        });\n        console.log(this.state.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Search, {\n      color: \"brand\",\n      type: \"submit\",\n      onClick: () => {\n        this.props.scrapeWebByLocation(this.state.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      columns: {\n        count: 3,\n        size: 'auto'\n      },\n      gap: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, this.props.petData.map(pets => /*#__PURE__*/React.createElement(PetProfile, {\n      key: pets.date,\n      image: pets.image ? pets.image : luna,\n      name: pets.name ? pets.name : \"\",\n      location: pets.location,\n      size: pets.size,\n      species: pets.species,\n      breed: pets.breed,\n      date: pets.date,\n      comments: pets.comments,\n      og_post: pets.og_post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    petData: state.petData,\n    isFetching: state.isFetching\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getPets,\n  scrapeWebByLocation\n})(PetProfiles);","map":{"version":3,"sources":["/Users/destinythejedi/School/courses/csci490/FluffFinder/fluff-finder/src/PetProfiles.js"],"names":["kitty","killua","appa","luna","sprinkles","React","PetProfile","Search","connect","getPets","scrapeWebByLocation","Button","Heading","Image","Box","Grid","FormField","TextInput","PetProfiles","Component","constructor","props","state","value","pets","petData","componentDidMount","console","log","setState","render","event","target","count","size","map","date","image","name","location","species","breed","comments","og_post","mapStateToProps","isFetching"],"mappings":"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","sourcesContent":["import kitty from \"./petImages/kittysad.jpg\";\nimport killua from \"./petImages/killua.jpg\";\nimport appa from \"./petImages/appa.jpg\";\nimport luna from \"./petImages/luna.png\";\nimport sprinkles from \"./petImages/sprinkles.JPG\";\n\nimport React from \"react\";\nimport PetProfile from \"./PetProfile\";\nimport { Search } from \"grommet-icons\";\nimport { connect } from \"react-redux\";\nimport { getPets, scrapeWebByLocation } from \"./js/actions/index\";\nimport {\n  Button,\n  Heading,\n  Image,\n  Box,\n  Grid,\n  FormField,\n  TextInput,\n} from \"grommet\";\n\n/*function testing(city){\n  console.log('here')\nfetch(`http://localhost:5000/find_pets_py/${city}`)\n  .then((response) => response.json())\n  .then((json) => {\n    console.log(json);\n  });\n}*/\n\nclass PetProfiles extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: \"\", pets: this.props.petData };\n  }\n  componentDidMount() {\n    this.props.getPets();\n    console.log(this.props.petData);\n    this.setState({ pets: this.props.petData });\n    console.log(this.state.pets);\n  }\n\n  render() {\n    return (\n      <>\n        <Box align=\"center\" justify=\"center\" gap=\"large\">\n          <Heading align=\"center\" justify=\"center\">\n            Search for a fluff\n          </Heading>\n          <Box direction=\"row\" align=\"center\">\n            <TextInput\n              type=\"search\"\n              placeholder=\"search by city\"\n              value={this.state.value}\n              onChange={(event) => {\n                this.setState({ value: event.target.value });\n                console.log(this.state.value);\n              }}\n            />\n            <Search\n              color=\"brand\"\n              type=\"submit\"\n              onClick={() => {\n                this.props.scrapeWebByLocation(this.state.value);\n              }}\n            />\n          </Box>\n          {/*<Button onClick={ ()=> {testing('jacksonville')}}/>*/}\n          <Box>\n            <Grid\n                   columns={{\n                    count: 3,\n                    size: 'auto',\n                  }}\n                  gap=\"small\"\n            >\n              {/*}  <PetProfile image={kitty} name={\"Sade\"} />\n            <PetProfile image={killua} name={\"Killua\"} />\n            <PetProfile image={appa} name={\"Appa\"} />\n            <PetProfile image={luna} name={\"Luna\"} />\n            <PetProfile image={sprinkles} name={\"Sprinkles\"} />\n            */}\n              {/* <PetProfile\n                //key={pets.date}\n                image={kitty}\n                name={this.state.pets.name?this.state.pets.name:'NULL'}\n                location={this.state.pets.location}\n                size={this.state.pets.size}\n                species={this.state.pets.species}\n                breed={this.state.pets.breed}\n                og_post={this.state.og_post}\n                comment={this.state.comments}\n           />*/}\n              {this.props.petData.map((pets) => (\n                <PetProfile\n                  key={pets.date}\n                  image={pets.image ? pets.image : luna}\n                  name={pets.name ? pets.name : \"\"}\n                  location={pets.location}\n                  size={pets.size}\n                  species={pets.species}\n                  breed={pets.breed}\n                  date={pets.date}\n                  comments={pets.comments}\n                  og_post={pets.og_post}\n                />\n              ))}\n            </Grid>\n          </Box>\n        </Box>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    petData: state.petData,\n    isFetching: state.isFetching,\n  };\n}\nexport default connect(mapStateToProps, { getPets, scrapeWebByLocation })(\n  PetProfiles\n);\n"]},"metadata":{},"sourceType":"module"}