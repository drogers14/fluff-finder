{"ast":null,"code":"// src/js/actions/index.js\nconst find_pet_py = require('../../../../backend/scraperCall.js');\n\nimport { SIGN_UP, SIGN_UP_SUCCESS, IS_FETCHING, SIGN_UP_ERROR, SUBMIT_PET_SUCCESS, SUBMIT_PET_ERROR, PET_DATA_LOADED } from \"../constants/action-types\"; //import scraperCall from \"../../../../backend/scraperCall\";\n\nexport function getData() {\n  return function (dispatch) {\n    return fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => response.json()).then(json => {\n      dispatch({\n        type: \"DATA_LOADED\",\n        payload: json\n      });\n    });\n  };\n}\nexport function submitPet(petinfo) {\n  var newPet = petinfo;\n  console.log(\"petinfo: \", newPet);\n  return function (dispatch) {\n    dispatch({\n      type: IS_FETCHING\n    });\n    console.log(\"after dispatch\");\n    return fetch(\"http://localhost:5000/pets/plus/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"applicationjson\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: newPet.name,\n        size: newPet.size,\n        species: newPet.species,\n        breed: newPet.breed,\n        location: newPet.location,\n        comments: newPet.comments\n      })\n    }).then(response => response.json()).then(response => {\n      console.log(response);\n      dispatch({\n        type: SUBMIT_PET_SUCCESS\n      });\n    }).catch(error => {\n      console.log(\"Error\", error);\n      dispatch({\n        type: SUBMIT_PET_ERROR\n      });\n    });\n  };\n}\nexport function signUp(userinfo) {\n  var newUser = userinfo;\n  console.log(\"function call: \", newUser);\n  return function (dispatch) {\n    dispatch({\n      type: IS_FETCHING\n    });\n    console.log(\"ok just checking\");\n    return fetch(\"http://localhost:5000/users/add/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: newUser.username,\n        fullName: newUser.fullName,\n        email: newUser.email,\n        password: newUser.password\n      })\n    }).then(response => response.json()).then(response => {\n      console.log(response);\n      dispatch({\n        type: SIGN_UP_SUCCESS\n      });\n    }).catch(error => {\n      console.error(\"Error:\", error);\n      dispatch({\n        type: SIGN_UP_ERROR\n      });\n    });\n  };\n}\nexport function getPets() {\n  return function (dispatch) {\n    dispatch({\n      type: IS_FETCHING\n    });\n    return fetch(\"http://localhost:5000/pets/\").then(response => response.json()).then(json => {\n      dispatch({\n        type: PET_DATA_LOADED,\n        payload: json\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/Users/destinythejedi/School/courses/csci490/FluffFinder/fluff-finder/src/js/actions/index.js"],"names":["find_pet_py","require","SIGN_UP","SIGN_UP_SUCCESS","IS_FETCHING","SIGN_UP_ERROR","SUBMIT_PET_SUCCESS","SUBMIT_PET_ERROR","PET_DATA_LOADED","getData","dispatch","fetch","then","response","json","type","payload","submitPet","petinfo","newPet","console","log","method","headers","Accept","body","JSON","stringify","name","size","species","breed","location","comments","catch","error","signUp","userinfo","newUser","username","fullName","email","password","getPets"],"mappings":"AAAA;AACA,MAAMA,WAAW,GAAGC,OAAO,CAAC,oCAAD,CAA3B;;AACA,SACEC,OADF,EAEEC,eAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,kBALF,EAMEC,gBANF,EAOEC,eAPF,QAQO,2BARP,C,CASA;;AAEA,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAO,UAAUC,QAAV,EAAoB;AACzB,WAAOC,KAAK,CAAC,4CAAD,CAAL,CACJC,IADI,CACEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADf,EAEJF,IAFI,CAEEE,IAAD,IAAU;AACdJ,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,OAAO,EAAEF;AAAhC,OAAD,CAAR;AACD,KAJI,CAAP;AAKD,GAND;AAOD;AAED,OAAO,SAASG,SAAT,CAAmBC,OAAnB,EAA4B;AACjC,MAAIC,MAAM,GAAGD,OAAb;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,MAAzB;AACA,SAAO,UAAUT,QAAV,EAAoB;AACzBA,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEX;AAAR,KAAD,CAAR;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,WAAOV,KAAK,CAAC,kCAAD,EAAqC;AAC/CW,MAAAA,MAAM,EAAE,MADuC;AAE/CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,iBADD;AAEP,uCAA+B,GAFxB;AAGP,wBAAgB;AAHT,OAFsC;AAO/CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,IAAI,EAAET,MAAM,CAACS,IADM;AAEnBC,QAAAA,IAAI,EAAEV,MAAM,CAACU,IAFM;AAGnBC,QAAAA,OAAO,EAAEX,MAAM,CAACW,OAHG;AAInBC,QAAAA,KAAK,EAAEZ,MAAM,CAACY,KAJK;AAKnBC,QAAAA,QAAQ,EAAEb,MAAM,CAACa,QALE;AAMnBC,QAAAA,QAAQ,EAAEd,MAAM,CAACc;AANE,OAAf;AAPyC,KAArC,CAAL,CAgBJrB,IAhBI,CAgBEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAhBf,EAiBJF,IAjBI,CAiBEC,QAAD,IAAc;AAClBO,MAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACAH,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAET;AAAR,OAAD,CAAR;AACD,KApBI,EAqBJ4B,KArBI,CAqBGC,KAAD,IAAW;AAChBf,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBc,KAArB;AACAzB,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAER;AAAR,OAAD,CAAR;AACD,KAxBI,CAAP;AAyBD,GA5BD;AA6BD;AAED,OAAO,SAAS6B,MAAT,CAAgBC,QAAhB,EAA0B;AAC/B,MAAIC,OAAO,GAAGD,QAAd;AACAjB,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BiB,OAA/B;AACA,SAAO,UAAU5B,QAAV,EAAoB;AACzBA,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEX;AAAR,KAAD,CAAR;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,WAAOV,KAAK,CAAC,kCAAD,EAAqC;AAC/CW,MAAAA,MAAM,EAAE,MADuC;AAE/CC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,uCAA+B,GAFxB;AAGP,wBAAgB;AAHT,OAFsC;AAO/CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBY,QAAAA,QAAQ,EAAED,OAAO,CAACC,QADC;AAEnBC,QAAAA,QAAQ,EAAEF,OAAO,CAACE,QAFC;AAGnBC,QAAAA,KAAK,EAAEH,OAAO,CAACG,KAHI;AAInBC,QAAAA,QAAQ,EAAEJ,OAAO,CAACI;AAJC,OAAf;AAPyC,KAArC,CAAL,CAcJ9B,IAdI,CAcEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAdf,EAeJF,IAfI,CAeEC,QAAD,IAAc;AAClBO,MAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACAH,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAEZ;AAAR,OAAD,CAAR;AACD,KAlBI,EAmBJ+B,KAnBI,CAmBGC,KAAD,IAAW;AAChBf,MAAAA,OAAO,CAACe,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACAzB,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAEV;AAAR,OAAD,CAAR;AACD,KAtBI,CAAP;AAuBD,GA1BD;AA2BD;AAED,OAAO,SAASsC,OAAT,GAAkB;AACvB,SAAO,UAAUjC,QAAV,EAAoB;AACzBA,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEX;AAAR,KAAD,CAAR;AACA,WAAOO,KAAK,CAAC,6BAAD,CAAL,CACJC,IADI,CACEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADf,EAEJF,IAFI,CAEEE,IAAD,IAAU;AACdJ,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAEP,eAAR;AAAyBQ,QAAAA,OAAO,EAAEF;AAAlC,OAAD,CAAR;AACD,KAJI,CAAP;AAKD,GAPD;AAQD","sourcesContent":["// src/js/actions/index.js\nconst find_pet_py = require('../../../../backend/scraperCall.js')\nimport {\n  SIGN_UP,\n  SIGN_UP_SUCCESS,\n  IS_FETCHING,\n  SIGN_UP_ERROR,\n  SUBMIT_PET_SUCCESS,\n  SUBMIT_PET_ERROR,\n  PET_DATA_LOADED,\n} from \"../constants/action-types\";\n//import scraperCall from \"../../../../backend/scraperCall\";\n\nexport function getData() {\n  return function (dispatch) {\n    return fetch(\"https://jsonplaceholder.typicode.com/posts\")\n      .then((response) => response.json())\n      .then((json) => {\n        dispatch({ type: \"DATA_LOADED\", payload: json });\n      });\n  };\n}\n\nexport function submitPet(petinfo) {\n  var newPet = petinfo;\n  console.log(\"petinfo: \", newPet);\n  return function (dispatch) {\n    dispatch({ type: IS_FETCHING });\n    console.log(\"after dispatch\");\n    return fetch(\"http://localhost:5000/pets/plus/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"applicationjson\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: newPet.name,\n        size: newPet.size,\n        species: newPet.species,\n        breed: newPet.breed,\n        location: newPet.location,\n        comments: newPet.comments,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        console.log(response);\n        dispatch({ type: SUBMIT_PET_SUCCESS });\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        dispatch({ type: SUBMIT_PET_ERROR });\n      });\n  };\n}\n\nexport function signUp(userinfo) {\n  var newUser = userinfo;\n  console.log(\"function call: \", newUser);\n  return function (dispatch) {\n    dispatch({ type: IS_FETCHING });\n    console.log(\"ok just checking\");\n    return fetch(\"http://localhost:5000/users/add/\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: newUser.username,\n        fullName: newUser.fullName,\n        email: newUser.email,\n        password: newUser.password,\n      }),\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        console.log(response);\n        dispatch({ type: SIGN_UP_SUCCESS });\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n        dispatch({ type: SIGN_UP_ERROR });\n      });\n  };\n}\n\nexport function getPets(){\n  return function (dispatch) {\n    dispatch({ type: IS_FETCHING });\n    return fetch(\"http://localhost:5000/pets/\")\n      .then((response) => response.json())\n      .then((json) => {\n        dispatch({ type: PET_DATA_LOADED, payload: json });\n      });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}