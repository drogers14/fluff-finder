{"ast":null,"code":"var _jsxFileName = \"/Users/destinythejedi/School/courses/csci490/FluffFinder/fluff-finder/src/TooltipsSidebar.js\";\nimport React, { useRef, useState } from 'react';\nimport { Avatar, Button, Box, Drop, Nav, Stack } from 'grommet';\nimport { Analytics, Calculator, Gremlin, Notification, Stakeholder } from 'grommet-icons';\nconst src = '//s.gravatar.com/avatar/b7fb138d53ba0f573212ccce38a7c43b?s=80';\n\nconst NotificationIcon = () => /*#__PURE__*/React.createElement(Stack, {\n  anchor: \"top-right\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Notification, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(Box, {\n  background: \"accent-1\",\n  pad: \"xsmall\",\n  round: true,\n  responsive: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }\n}));\n\nconst NotificationAlert = () => {\n  const ref = useRef();\n  const [over, setOver] = useState();\n  return /*#__PURE__*/React.createElement(Box, {\n    alignSelf: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onFocus: () => setOver(true),\n    onBlur: () => setOver(false),\n    onMouseOver: () => setOver(true),\n    onMouseOut: () => setOver(false),\n    icon: /*#__PURE__*/React.createElement(NotificationIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }),\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), ref.current && over && /*#__PURE__*/React.createElement(Drop, {\n    align: {\n      left: 'right'\n    },\n    plain: true,\n    target: ref.current,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    animation: \"jiggle\",\n    background: \"accent-1\",\n    round: {\n      corner: 'left'\n    },\n    pad: \"small\",\n    margin: {\n      vertical: 'large'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"New Analytics!\")));\n};\n\nconst SidebarFooter = () => /*#__PURE__*/React.createElement(Box, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(NotificationAlert, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(Avatar, {\n  margin: \"small\",\n  src: src,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }\n}));\n\nconst SidebarHeader = () => /*#__PURE__*/React.createElement(Box, {\n  pad: \"small\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Avatar, {\n  background: \"linear-gradient(#6FFFB0 0%, #7D4CDB 100%)\",\n  border: {\n    color: 'white',\n    size: 'small'\n  },\n  round: \"medium\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Gremlin, {\n  color: \"white\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }\n})));\n\nconst iconsMap = color => [/*#__PURE__*/React.createElement(Analytics, {\n  color: color,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(Stakeholder, {\n  color: color,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(Calculator, {\n  color: color,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 3\n  }\n})];\n\nconst SidebarButton = ({\n  iconName,\n  index\n}) => {\n  const [over, setOver] = useState();\n  const tooltipColor = {\n    color: 'accent-1',\n    opacity: 0.9\n  };\n  const ref = useRef();\n  return /*#__PURE__*/React.createElement(Box, {\n    fill: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    ref: ref,\n    onMouseOver: () => setOver(true),\n    onMouseLeave: () => setOver(false),\n    onFocus: () => setOver(false),\n    onBlur: () => setOver(false),\n    hoverIndicator: tooltipColor,\n    plain: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, ({\n    hover\n  }) => /*#__PURE__*/React.createElement(Box, {\n    pad: {\n      vertical: 'small'\n    },\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, iconsMap(hover ? 'black' : 'white')[index])), ref.current && over && /*#__PURE__*/React.createElement(Drop, {\n    align: {\n      left: 'right'\n    },\n    target: ref.current,\n    plain: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    animation: \"slideRight\",\n    margin: \"xsmall\",\n    pad: \"small\",\n    background: tooltipColor,\n    round: {\n      size: 'medium',\n      corner: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, iconName)));\n};\n\nexport const TooltipsSidebar = () => /*#__PURE__*/React.createElement(Box, {\n  background: \"brand\",\n  height: {\n    min: '100%'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(SidebarHeader, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(Nav, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }\n}, ['Analytics', 'Stakeholder', 'Calculator'].map((iconName, index) => /*#__PURE__*/React.createElement(SidebarButton, {\n  key: iconName,\n  iconName: iconName,\n  index: index,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 13\n  }\n}))));","map":{"version":3,"sources":["/Users/destinythejedi/School/courses/csci490/FluffFinder/fluff-finder/src/TooltipsSidebar.js"],"names":["React","useRef","useState","Avatar","Button","Box","Drop","Nav","Stack","Analytics","Calculator","Gremlin","Notification","Stakeholder","src","NotificationIcon","NotificationAlert","ref","over","setOver","current","left","corner","vertical","SidebarFooter","SidebarHeader","color","size","iconsMap","SidebarButton","iconName","index","tooltipColor","opacity","hover","TooltipsSidebar","min","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AAEA,SACEC,MADF,EAEEC,MAFF,EAGEC,GAHF,EAIEC,IAJF,EAKEC,GALF,EAMEC,KANF,QAOO,SAPP;AASA,SACEC,SADF,EAEEC,UAFF,EAGEC,OAHF,EAIEC,YAJF,EAKEC,WALF,QAMO,eANP;AAQA,MAAMC,GAAG,GAAG,+DAAZ;;AAEA,MAAMC,gBAAgB,GAAG,mBACvB,oBAAC,KAAD;AAAO,EAAA,MAAM,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE,oBAAC,GAAD;AAAK,EAAA,UAAU,EAAC,UAAhB;AAA2B,EAAA,GAAG,EAAC,QAA/B;AAAwC,EAAA,KAAK,MAA7C;AAA8C,EAAA,UAAU,EAAE,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF;;AAOA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAMC,GAAG,GAAGhB,MAAM,EAAlB;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,EAAhC;AACA,sBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAMiB,OAAO,CAAC,IAAD,CADxB;AAEE,IAAA,MAAM,EAAE,MAAMA,OAAO,CAAC,KAAD,CAFvB;AAGE,IAAA,WAAW,EAAE,MAAMA,OAAO,CAAC,IAAD,CAH5B;AAIE,IAAA,UAAU,EAAE,MAAMA,OAAO,CAAC,KAAD,CAJ3B;AAKE,IAAA,IAAI,eAAE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALR;AAME,IAAA,GAAG,EAAEF,GANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASGA,GAAG,CAACG,OAAJ,IAAeF,IAAf,iBACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAgC,IAAA,KAAK,MAArC;AAAsC,IAAA,MAAM,EAAEJ,GAAG,CAACG,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,UAAU,EAAC,UAFb;AAGE,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAHT;AAIE,IAAA,GAAG,EAAC,OAJN;AAKE,IAAA,MAAM,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAVJ,CADF;AAyBD,CA5BD;;AA8BA,MAAMC,aAAa,GAAG,mBACpB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE,oBAAC,MAAD;AAAQ,EAAA,MAAM,EAAC,OAAf;AAAuB,EAAA,GAAG,EAAEV,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF;;AAOA,MAAMW,aAAa,GAAG,mBACpB,oBAAC,GAAD;AAAK,EAAA,GAAG,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,MAAD;AACE,EAAA,UAAU,EAAC,2CADb;AAEE,EAAA,MAAM,EAAE;AAAEC,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GAFV;AAGE,EAAA,KAAK,EAAC,QAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKE,oBAAC,OAAD;AAAS,EAAA,KAAK,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALF,CADF,CADF;;AAYA,MAAMC,QAAQ,GAAGF,KAAK,IAAI,cACxB,oBAAC,SAAD;AAAW,EAAA,KAAK,EAAEA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADwB,eAExB,oBAAC,WAAD;AAAa,EAAA,KAAK,EAAEA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFwB,eAGxB,oBAAC,UAAD;AAAY,EAAA,KAAK,EAAEA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHwB,CAA1B;;AAKA,MAAMG,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAyB;AAC7C,QAAM,CAACb,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,EAAhC;AACA,QAAM8B,YAAY,GAAG;AAAEN,IAAAA,KAAK,EAAE,UAAT;AAAqBO,IAAAA,OAAO,EAAE;AAA9B,GAArB;AAEA,QAAMhB,GAAG,GAAGhB,MAAM,EAAlB;AACA,sBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEgB,GADP;AAEE,IAAA,WAAW,EAAE,MAAME,OAAO,CAAC,IAAD,CAF5B;AAGE,IAAA,YAAY,EAAE,MAAMA,OAAO,CAAC,KAAD,CAH7B;AAIE,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAD,CAJxB;AAKE,IAAA,MAAM,EAAE,MAAMA,OAAO,CAAC,KAAD,CALvB;AAME,IAAA,cAAc,EAAEa,YANlB;AAOE,IAAA,KAAK,MAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASG,CAAC;AAAEE,IAAAA;AAAF,GAAD,kBACC,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAE;AAAEX,MAAAA,QAAQ,EAAE;AAAZ,KAAV;AAAiC,IAAA,KAAK,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,QAAQ,CAACM,KAAK,GAAG,OAAH,GAAa,OAAnB,CAAR,CAAoCH,KAApC,CADH,CAVJ,CADF,EAgBGd,GAAG,CAACG,OAAJ,IAAeF,IAAf,iBACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAgC,IAAA,MAAM,EAAEJ,GAAG,CAACG,OAA5C;AAAqD,IAAA,KAAK,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,GAAG,EAAC,OAHN;AAIE,IAAA,UAAU,EAAEY,YAJd;AAKE,IAAA,KAAK,EAAE;AAAEL,MAAAA,IAAI,EAAE,QAAR;AAAkBL,MAAAA,MAAM,EAAE;AAA1B,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGQ,QAPH,CADF,CAjBJ,CADF;AAgCD,CArCD;;AAuCA,OAAO,MAAMK,eAAe,GAAG,mBAC3B,oBAAC,GAAD;AAAM,EAAA,UAAU,EAAC,OAAjB;AAAyB,EAAA,MAAM,EAAE;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,eASI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,CAAC,WAAD,EAAc,aAAd,EAA6B,YAA7B,EAA2CC,GAA3C,CAA+C,CAACP,QAAD,EAAWC,KAAX,kBAC9C,oBAAC,aAAD;AAAe,EAAA,GAAG,EAAED,QAApB;AAA8B,EAAA,QAAQ,EAAEA,QAAxC;AAAkD,EAAA,KAAK,EAAEC,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADH,CATJ,CADG","sourcesContent":["import React, { useRef, useState } from 'react';\n\nimport {\n  Avatar,\n  Button,\n  Box,\n  Drop,\n  Nav,\n  Stack,\n} from 'grommet';\n\nimport {\n  Analytics,\n  Calculator,\n  Gremlin,\n  Notification,\n  Stakeholder,\n} from 'grommet-icons';\n\nconst src = '//s.gravatar.com/avatar/b7fb138d53ba0f573212ccce38a7c43b?s=80';\n\nconst NotificationIcon = () => (\n  <Stack anchor=\"top-right\">\n    <Notification />\n    <Box background=\"accent-1\" pad=\"xsmall\" round responsive={false} />\n  </Stack>\n);\n\nconst NotificationAlert = () => {\n  const ref = useRef();\n  const [over, setOver] = useState();\n  return (\n    <Box alignSelf=\"center\">\n      <Button\n        onFocus={() => setOver(true)}\n        onBlur={() => setOver(false)}\n        onMouseOver={() => setOver(true)}\n        onMouseOut={() => setOver(false)}\n        icon={<NotificationIcon />}\n        ref={ref}\n      />\n      {ref.current && over && (\n        <Drop align={{ left: 'right' }} plain target={ref.current}>\n          <Box\n            animation=\"jiggle\"\n            background=\"accent-1\"\n            round={{ corner: 'left' }}\n            pad=\"small\"\n            margin={{ vertical: 'large' }}\n          >\n            New Analytics!\n          </Box>\n        </Drop>\n      )}\n    </Box>\n  );\n};\n\nconst SidebarFooter = () => (\n  <Box>\n    <NotificationAlert />\n    <Avatar margin=\"small\" src={src} />\n  </Box>\n);\n\nconst SidebarHeader = () => (\n  <Box pad=\"small\">\n    <Avatar\n      background=\"linear-gradient(#6FFFB0 0%, #7D4CDB 100%)\"\n      border={{ color: 'white', size: 'small' }}\n      round=\"medium\"\n    >\n      <Gremlin color=\"white\" />\n    </Avatar>\n  </Box>\n);\n\nconst iconsMap = color => [\n  <Analytics color={color} />,\n  <Stakeholder color={color} />,\n  <Calculator color={color} />,\n];\nconst SidebarButton = ({ iconName, index }) => {\n  const [over, setOver] = useState();\n  const tooltipColor = { color: 'accent-1', opacity: 0.9 };\n\n  const ref = useRef();\n  return (\n    <Box fill=\"horizontal\">\n      <Button\n        ref={ref}\n        onMouseOver={() => setOver(true)}\n        onMouseLeave={() => setOver(false)}\n        onFocus={() => setOver(false)}\n        onBlur={() => setOver(false)}\n        hoverIndicator={tooltipColor}\n        plain\n      >\n        {({ hover }) => (\n          <Box pad={{ vertical: 'small' }} align=\"center\">\n            {iconsMap(hover ? 'black' : 'white')[index]}\n          </Box>\n        )}\n      </Button>\n      {ref.current && over && (\n        <Drop align={{ left: 'right' }} target={ref.current} plain>\n          <Box\n            animation=\"slideRight\"\n            margin=\"xsmall\"\n            pad=\"small\"\n            background={tooltipColor}\n            round={{ size: 'medium', corner: 'right' }}\n          >\n            {iconName}\n          </Box>\n        </Drop>\n      )}\n    </Box>\n  );\n};\n\nexport const TooltipsSidebar = () => (\n    <Box  background=\"brand\" height={{ min: '100%' }}>\n        <SidebarHeader/>\n    {/*  <Sidebar\n        overflow=\"auto\"\n        background=\"brand\"\n        header={<SidebarHeader />}\n        footer={<SidebarFooter />}\n        pad=\"none\"\n    >*/}\n        <Nav>\n          {['Analytics', 'Stakeholder', 'Calculator'].map((iconName, index) => (\n            <SidebarButton key={iconName} iconName={iconName} index={index} />\n          ))}\n        </Nav>\n    </Box>\n);\n\n"]},"metadata":{},"sourceType":"module"}