{"ast":null,"code":"// src/js/actions/index.js\nimport { SIGN_UP, SIGN_UP_SUCCESS, IS_FETCHING, SIGN_UP_ERROR } from '../constants/action-types';\nexport function getData() {\n  return function (dispatch) {\n    return fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => response.json()).then(json => {\n      dispatch({\n        type: \"DATA_LOADED\",\n        payload: json\n      });\n    });\n  };\n}\nexport function submitPet(petinfo) {\n  var newPet = petinfo;\n  console.log('petinfo: ', newPet);\n  return function (dispatch) {\n    dispatch({\n      type: IS_FETCHING\n    });\n    return fetch('http://localhost:5000/pets/add/', {\n      method: 'POST',\n      headers: {\n        'Accept': 'applicationjson',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newPet)\n    }).then(res => res.json()).then(res => {\n      console.log(res); //dispatch({type: SUBMIT_PET_SUCCESS});\n    }).catch(error => {\n      console.log('Error', error); //dispatch an error\n    });\n  };\n}\nexport function signUp(userinfo) {\n  var newUser = userinfo;\n  console.log('function call: ', newUser);\n  return function (dispatch) {\n    dispatch({\n      type: IS_FETCHING\n    });\n    return fetch('http://localhost:5000/users/add/', {\n      method: \"POST\",\n      headers: {\n        'Accept': \"application/json\",\n        'Content-Type': \"application/json\"\n      },\n      body: JSON.stringify({\n        username: newUser.username,\n        email: newUser.email,\n        password: newUser.password\n      })\n    }).then(response => response.json()).then(response => {\n      console.log(response);\n      dispatch({\n        type: SIGN_UP_SUCCESS\n      });\n    }).catch(error => {\n      console.error(\"Error:\", error);\n      dispatch({\n        type: SIGN_UP_ERROR\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/Users/destinythejedi/School/courses/csci490/FluffFinder/fluff-finder/src/js/actions/index.js"],"names":["SIGN_UP","SIGN_UP_SUCCESS","IS_FETCHING","SIGN_UP_ERROR","getData","dispatch","fetch","then","response","json","type","payload","submitPet","petinfo","newPet","console","log","method","headers","body","JSON","stringify","res","catch","error","signUp","userinfo","newUser","username","email","password"],"mappings":"AAAA;AACA,SACEA,OADF,EAEEC,eAFF,EAGEC,WAHF,EAIAC,aAJA,QAKO,2BALP;AAOA,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAO,UAASC,QAAT,EAAmB;AACxB,WAAOC,KAAK,CAAC,4CAAD,CAAL,CACJC,IADI,CACCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADb,EAEJF,IAFI,CAECE,IAAI,IAAI;AACZJ,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,OAAO,EAAEF;AAAhC,OAAD,CAAR;AACD,KAJI,CAAP;AAKD,GAND;AAOD;AAED,OAAO,SAASG,SAAT,CAAmBC,OAAnB,EAA2B;AAChC,MAAIC,MAAM,GAAGD,OAAb;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,MAAzB;AACA,SAAO,UAAUT,QAAV,EAAmB;AACxBA,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAER;AAAP,KAAD,CAAR;AACA,WAAOI,KAAK,CAAC,iCAAD,EAAoC;AAC9CW,MAAAA,MAAM,EAAE,MADsC;AAE9CC,MAAAA,OAAO,EAAE;AACP,kBAAU,iBADH;AAEP,wBAAgB;AAFT,OAFqC;AAM9CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,MAAf;AANwC,KAApC,CAAL,CAOJP,IAPI,CAOCe,GAAG,IAAIA,GAAG,CAACb,IAAJ,EAPR,EAQNF,IARM,CAQDe,GAAG,IAAI;AACXP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ,EADW,CAEX;AACD,KAXM,EAYNC,KAZM,CAYCC,KAAD,IAAW;AAChBT,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBQ,KAArB,EADgB,CAEhB;AACD,KAfM,CAAP;AAgBD,GAlBD;AAmBD;AAED,OAAO,SAASC,MAAT,CAAgBC,QAAhB,EAA0B;AAC/B,MAAIC,OAAO,GAAGD,QAAd;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BW,OAA/B;AACA,SAAO,UAAUtB,QAAV,EAAmB;AACxBA,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAER;AAAP,KAAD,CAAR;AACF,WAAOI,KAAK,CAAC,kCAAD,EAAqC;AAC/CW,MAAAA,MAAM,EAAE,MADuC;AAE/CC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT,OAFsC;AAM/CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBO,QAAAA,QAAQ,EAAED,OAAO,CAACC,QADC;AAEnBC,QAAAA,KAAK,EAAEF,OAAO,CAACE,KAFI;AAGnBC,QAAAA,QAAQ,EAAEH,OAAO,CAACG;AAHC,OAAf;AANyC,KAArC,CAAL,CAWJvB,IAXI,CAWCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAXb,EAYJF,IAZI,CAYCC,QAAQ,IAAI;AAChBO,MAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACAH,MAAAA,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAAET;AAAP,OAAD,CAAR;AACD,KAfI,EAgBJsB,KAhBI,CAgBGC,KAAD,IAAW;AACbT,MAAAA,OAAO,CAACS,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACAnB,MAAAA,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAAEP;AAAP,OAAD,CAAR;AACJ,KAnBI,CAAP;AAqBC,GAvBD;AAyBD","sourcesContent":["// src/js/actions/index.js\nimport {\n  SIGN_UP, \n  SIGN_UP_SUCCESS, \n  IS_FETCHING,\nSIGN_UP_ERROR,\n} from '../constants/action-types'\n\nexport function getData() {\n  return function(dispatch) {\n    return fetch(\"https://jsonplaceholder.typicode.com/posts\")\n      .then(response => response.json())\n      .then(json => {\n        dispatch({ type: \"DATA_LOADED\", payload: json });\n      });\n  };\n}\n\nexport function submitPet(petinfo){\n  var newPet = petinfo;\n  console.log('petinfo: ', newPet);\n  return function (dispatch){\n    dispatch({type: IS_FETCHING});\n    return fetch('http://localhost:5000/pets/add/', {\n      method: 'POST',\n      headers: {\n        'Accept': 'applicationjson',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(newPet)\n    }).then(res => res.json())\n    .then(res => {\n      console.log(res)\n      //dispatch({type: SUBMIT_PET_SUCCESS});\n    })\n    .catch((error) => {\n      console.log('Error', error);\n      //dispatch an error\n    });\n  };\n}\n\nexport function signUp(userinfo) {\n  var newUser = userinfo;\n  console.log('function call: ', newUser);\n  return function (dispatch){\n    dispatch({type: IS_FETCHING});\n  return fetch('http://localhost:5000/users/add/', {\n    method: \"POST\",\n    headers: {\n      'Accept': \"application/json\",\n      'Content-Type': \"application/json\",\n    },\n    body: JSON.stringify({\n      username: newUser.username,\n      email: newUser.email,\n      password: newUser.password,\n        }),\n  }).then(response => response.json())\n    .then(response => {\n      console.log(response)\n      dispatch({type: SIGN_UP_SUCCESS});\n    })\n    .catch((error) => {\n         console.error(\"Error:\", error);\n         dispatch({type: SIGN_UP_ERROR});\n    });\n  \n  };\n\n}"]},"metadata":{},"sourceType":"module"}