{"ast":null,"code":"// src/js/actions/index.js\nimport { SIGN_UP, SIGN_UP_SUCCESS, IS_FETCHING, SIGN_UP_ERROR } from '../constants/action-types';\nexport function getData() {\n  return function (dispatch) {\n    return fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => response.json()).then(json => {\n      dispatch({\n        type: \"DATA_LOADED\",\n        payload: json\n      });\n    });\n  };\n}\nexport function submitPet(petinfo) {\n  var newPet = petinfo;\n  console.log('petinfo: ', newPet);\n  return function (dispatch) {\n    dispatch({\n      type: IS_FETCHING\n    });\n    console.log('after dispatch');\n    return fetch('http://localhost:5000/pets/plus', {\n      method: 'POST',\n      headers: {\n        'Accept': 'applicationjson',\n        'Access-Control-Allow-Origin': \"*\",\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: newPet.name,\n        size: newPet.size,\n        species: newPet.species,\n        breed: newPet.breed,\n        location: newPet.location,\n        comments: newPet.comments\n      })\n    }).then(res => res.json()).then(res => {\n      console.log(res); //dispatch({type: SUBMIT_PET_SUCCESS});\n    }).catch(error => {\n      console.log('Error', error); //dispatch an error\n    });\n  };\n}\nexport function signUp(userinfo) {\n  var newUser = userinfo;\n  console.log('function call: ', newUser);\n  return function (dispatch) {\n    dispatch({\n      type: IS_FETCHING\n    });\n    console.log('ok just checking');\n    return fetch('http://localhost:5000/users/add/', {\n      method: \"POST\",\n      headers: {\n        'Accept': \"application/json\",\n        'Access-Control-Allow-Origin': \"*\",\n        'Content-Type': \"application/json\"\n      },\n      body: JSON.stringify({\n        username: newUser.username,\n        fullName: newUser.fullName,\n        email: newUser.email,\n        password: newUser.password\n      })\n    }).then(response => response.json()).then(response => {\n      console.log(response);\n      dispatch({\n        type: SIGN_UP_SUCCESS\n      });\n    }).catch(error => {\n      console.error(\"Error:\", error);\n      dispatch({\n        type: SIGN_UP_ERROR\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/Users/destinythejedi/School/courses/csci490/FluffFinder/fluff-finder/src/js/actions/index.js"],"names":["SIGN_UP","SIGN_UP_SUCCESS","IS_FETCHING","SIGN_UP_ERROR","getData","dispatch","fetch","then","response","json","type","payload","submitPet","petinfo","newPet","console","log","method","headers","body","JSON","stringify","name","size","species","breed","location","comments","res","catch","error","signUp","userinfo","newUser","username","fullName","email","password"],"mappings":"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","sourcesContent":["// src/js/actions/index.js\nimport {\n  SIGN_UP, \n  SIGN_UP_SUCCESS, \n  IS_FETCHING,\nSIGN_UP_ERROR,\n} from '../constants/action-types'\n\nexport function getData() {\n  return function(dispatch) {\n    return fetch(\"https://jsonplaceholder.typicode.com/posts\")\n      .then(response => response.json())\n      .then(json => {\n        dispatch({ type: \"DATA_LOADED\", payload: json });\n      });\n  };\n}\n\nexport function submitPet(petinfo){\n  var newPet = petinfo;\n  console.log('petinfo: ', newPet);\n  return function (dispatch){\n    dispatch({type: IS_FETCHING});\n    console.log('after dispatch');\n    return fetch('http://localhost:5000/pets/plus', {\n      method: 'POST',\n      headers: {\n        'Accept': 'applicationjson',\n        'Access-Control-Allow-Origin': \"*\",\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        name: newPet.name,\n        size: newPet.size,\n        species: newPet.species,\n        breed: newPet.breed,\n        location: newPet.location,\n        comments: newPet.comments,\n      }),\n    }).then(res => res.json())\n    .then(res => {\n      console.log(res)\n      //dispatch({type: SUBMIT_PET_SUCCESS});\n    })\n    .catch((error) => {\n      console.log('Error', error);\n      //dispatch an error\n    });\n  };\n}\n\nexport function signUp(userinfo) {\n  var newUser = userinfo;\n  console.log('function call: ', newUser);\n  return function (dispatch){\n    dispatch({type: IS_FETCHING});\n    console.log('ok just checking');\n  return fetch('http://localhost:5000/users/add/', {\n    method: \"POST\",\n    headers: {\n      'Accept': \"application/json\",\n      'Access-Control-Allow-Origin': \"*\",\n      'Content-Type': \"application/json\",\n    },\n    body: JSON.stringify({\n      username: newUser.username,\n      fullName: newUser.fullName,\n      email: newUser.email,\n      password: newUser.password,\n        }),\n  }).then(response => response.json())\n    .then(response => {\n      console.log(response)\n      dispatch({type: SIGN_UP_SUCCESS});\n    })\n    .catch((error) => {\n         console.error(\"Error:\", error);\n         dispatch({type: SIGN_UP_ERROR});\n    });\n  };\n}"]},"metadata":{},"sourceType":"module"}